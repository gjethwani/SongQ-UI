[{"/Users/gautamjethwani/Documents/songq-ui/src/reportWebVitals.js":"1","/Users/gautamjethwani/Documents/songq-ui/src/App.js":"2","/Users/gautamjethwani/Documents/songq-ui/src/index.js":"3","/Users/gautamjethwani/Documents/songq-ui/src/Home/index.js":"4","/Users/gautamjethwani/Documents/songq-ui/src/Home/Home.js":"5","/Users/gautamjethwani/Documents/songq-ui/src/GuestHome/index.js":"6","/Users/gautamjethwani/Documents/songq-ui/src/GuestHome/GuestHome.js":"7","/Users/gautamjethwani/Documents/songq-ui/src/util.js":"8","/Users/gautamjethwani/Documents/songq-ui/src/Feedback/index.js":"9","/Users/gautamjethwani/Documents/songq-ui/src/Feedback/Feedback.js":"10"},{"size":362,"mtime":1609565627382,"results":"11","hashOfConfig":"12"},{"size":905,"mtime":1613977172638,"results":"13","hashOfConfig":"12"},{"size":718,"mtime":1613444191075,"results":"14","hashOfConfig":"12"},{"size":45,"mtime":1609568096052,"results":"15","hashOfConfig":"12"},{"size":27105,"mtime":1613978607203,"results":"16","hashOfConfig":"12"},{"size":60,"mtime":1609615551780,"results":"17","hashOfConfig":"12"},{"size":9244,"mtime":1611884043081,"results":"18","hashOfConfig":"12"},{"size":724,"mtime":1611647288657,"results":"19","hashOfConfig":"12"},{"size":57,"mtime":1613442668012,"results":"20","hashOfConfig":"12"},{"size":1195,"mtime":1613978333978,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"3t1696",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gautamjethwani/Documents/songq-ui/src/reportWebVitals.js",[],["44","45"],"/Users/gautamjethwani/Documents/songq-ui/src/App.js",[],"/Users/gautamjethwani/Documents/songq-ui/src/index.js",[],"/Users/gautamjethwani/Documents/songq-ui/src/Home/index.js",[],"/Users/gautamjethwani/Documents/songq-ui/src/Home/Home.js",["46","47","48","49"],"/Users/gautamjethwani/Documents/songq-ui/src/GuestHome/index.js",[],"/Users/gautamjethwani/Documents/songq-ui/src/GuestHome/GuestHome.js",["50","51"],"import { \n    PageHeader, \n    Button, \n    notification, \n    List, \n    Table,\n    Spin\n} from 'antd'\nimport Input from 'muicss/lib/react/input'\nimport { \n    header, \n    cardExtras, \n    searchBox, \n    inactive \n} from './GuestHome.module.css'\nimport { albumArt, requestsTable, welcomeContainer, logo } from '../Home/Home.module.css'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport { CheckCircleTwoTone, PlusOutlined, LoadingOutlined } from '@ant-design/icons'\nimport { getURL, logoUrl, featureFlags } from '../util'\nimport { isMobile } from 'react-device-detect'\nimport 'antd/dist/antd.css'\nimport './mui.css'\n\nconst joinArtists = artistsRaw => {\n    let result = ''\n    for (let i = 0; i < artistsRaw.length; i++) {\n        result += artistsRaw[i].name\n        if (i < artistsRaw.length - 1) {\n            result += ', '\n        }\n    }\n    return result\n}\n\nconst GuestHome = () => {\n    const [tracks, setTracks] = useState([])\n    const [userName, setUserName]  = useState('')\n    const [queueActivated, setQueueActivated] = useState(false)\n    const [requested, setRequested] = useState([])\n    const [recentRequests, setRecentRequests] = useState([])\n    const [currQuery, setQuery] = useState('')\n    const [pageLoading, setPageLoading] = useState(true)\n    const [requestsLoading, setRequestsLoading] = useState([])\n    const { userId } = useParams()\n    const { queueActiveButtonFeatureEnabled } = featureFlags\n    const albumArtIndex = 0\n    let CancelToken = axios.CancelToken\n    let cancel\n    useEffect(() => {\n        document.title = 'Welcome to SongQ!'\n        axios.post(`${getURL()}/guest-login`, {}, { withCredentials: true })\n            .then(() => {\n                if (queueActiveButtonFeatureEnabled) {\n                    axios.post(`${getURL()}/is-queue-active`, { userId  }, { withCredentials: true })\n                    .then(response => {\n                        const { queueActivated } = response.data\n                        setQueueActivated(queueActivated)\n                    })\n                    .catch(err => {\n                        notification['error']({\n                            message: 'Server Error',\n                            description: 'Cannot connect to server'\n                        })\n                        console.log(err)\n                    })\n                }\n                axios.get(`${getURL()}/get-user-name?userId=${userId}`, { withCredentials: true })\n                    .then(response => {\n                        const { name } = response.data\n                        if (name) {\n                            setUserName(name)\n                        }\n                    })\n                    .catch(err => {\n                        console.log(err)\n                    })\n                axios.get(`${getURL()}/get-recently-approved?userId=${userId}`, { withCredentials: true })\n                    .then(response => {\n                        const { requests } = response.data\n                        setRecentRequests(requests)\n                    })\n                    .catch(err => {\n                        console.log(err)\n                    })\n            })\n            .catch(err => {\n                notification['error']({\n                    message: 'Server Error',\n                    description: 'Cannot connect to Spotify'\n                })\n                console.log(err)\n            })\n            .finally(() => {\n                setPageLoading(false)\n            })\n        \n    }, [])\n    const onSearchChanged = query => {\n        setQuery(query)\n        if (query === '') {\n            return\n        }\n        if (cancel !== undefined) {\n            cancel()\n        }\n        setPageLoading(true)\n        axios.post(`${getURL()}/search-songs`, { q: query}, { \n            withCredentials: true,\n            cancelToken: new CancelToken(c => {\n                cancel = c\n            })\n        })\n            .then(response => {\n                const { items } = response.data.results.tracks\n                setTracks(items)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n            .finally(() => {\n                setPageLoading(false)\n            })\n    }\n    const makeRequest = track => {\n        requestsLoading.push(track.id)\n        setRequestsLoading([...requestsLoading])\n        axios.post(`${getURL()}/make-request`, {\n            userId,\n            songId: track.id,\n            songName: track.songName,\n            artists: track.artists,\n            album: track.album,\n            albumArt: track.albumArt\n        }, {\n            withCredentials: true\n        })\n        .then(() => {\n            requested.push(track.id)\n            setRequested([...requested])\n        })\n        .catch(err => {\n            notification['error']({\n                message: 'Could not make request',\n                description: 'Error making request'\n            })\n            console.log(err)\n        })\n        .finally(() => {\n            requestsLoading.splice(track.id, 1)\n            setRequestsLoading([...requestsLoading])\n        })\n    }\n    const generateData = () => {\n        const toReturn = []\n        if (currQuery === '') {\n            for (let i = 0; i < recentRequests.length; i++) {\n                const r = recentRequests[i]\n                toReturn.push({\n                    key: `${i}`,\n                    track: {\n                        songName: r.songName,\n                        albumArt: r.albumArt,\n                        artists: r.artists\n                    }\n                })\n            }\n        } else {\n            for (let i = 0; i < tracks.length; i++) {\n                const t = tracks[i]\n                const songInfo = {\n                    songName: t.name,\n                    albumArt: t.album.images[albumArtIndex].url,\n                    artists: joinArtists(t.artists)\n                }\n                songInfo.id = t.id\n                toReturn.push({\n                    key: `${i}`,\n                    track: songInfo,\n                    request: {\n                        id: t.id,\n                        album: t.album.name,\n                        ...songInfo\n                    }\n                })\n            }\n        }\n        return toReturn\n    }\n    const columns = [\n        {\n            title: 'Track',\n            dataIndex: 'track',\n            key: 'track',\n            width: '70%',\n            render: track => (\n                <List.Item>\n                    <List.Item.Meta \n                        avatar={\n                            <img \n                                alt='album art' \n                                src={track.albumArt} \n                                className={albumArt}\n                        />}\n                        title={track.songName}\n                        description={track.artists}\n                    />\n                </List.Item>\n            ),\n        }\n    ]\n    if (currQuery !== '') {\n        columns.push({\n            title: 'Request',\n            dataIndex: 'request',\n            key: 'request',\n            width: '30%',\n            render: track => (\n                <Button \n                    className={cardExtras} \n                    style={{ marginBottom: '1rem', marginTop: '1rem', border: 'none'}} \n                    onClick={() => makeRequest(track)}\n                    disabled={requested.includes(track.id)}\n                    loading={requestsLoading.includes(track.id)}\n                >\n                    {requestsLoading.includes(track.id) ? '' : (requested.includes(track.id) ? <CheckCircleTwoTone className={cardExtras} twoToneColor=\"#52c41a\"/> : <PlusOutlined />)}\n                </Button>\n            )\n        })\n    }\n    return (\n        <div>\n            <PageHeader \n                title={\n                <div className={welcomeContainer}>\n                    <img className={logo} src={logoUrl} style={isMobile ? { width: '40%'} : {}}/>\n                    <span>{userName !== '' ? `${userName}'s queue` : `Welcome to the queue!`}</span>\n                </div>}\n                className={header}\n            />\n            <Spin spinning={pageLoading} indicator={<LoadingOutlined spin />}>\n                {!queueActivated && queueActiveButtonFeatureEnabled && <h3 className={inactive}>Queue is not active</h3>}\n                {(queueActivated || !queueActiveButtonFeatureEnabled) && \n                    <div>\n                        <Input\n                            label='Search for songs'\n                            onChange={e => onSearchChanged(e.target.value)}\n                            className={searchBox}\n                            floatingLabel\n                        />\n                        <h2 style={{ textAlign: 'center', fontVariant: 'tabular-nums', fontWeight: 'bold'}}>\n                            {currQuery === '' ? 'Recently Played' : 'Search Results'}\n                        </h2>\n                        <Table columns={columns} dataSource={generateData()} className={requestsTable} />\n                    </div>}\n            </Spin>\n        </div>\n    )\n}\n\n\n\nexport default GuestHome","/Users/gautamjethwani/Documents/songq-ui/src/util.js",[],"/Users/gautamjethwani/Documents/songq-ui/src/Feedback/index.js",[],"/Users/gautamjethwani/Documents/songq-ui/src/Feedback/Feedback.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":130,"column":8,"nodeType":"58","endLine":130,"endColumn":24,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"60","line":143,"column":9,"nodeType":"58","endLine":143,"endColumn":36,"suggestions":"61"},{"ruleId":"56","severity":1,"message":"62","line":147,"column":8,"nodeType":"58","endLine":147,"endColumn":17,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":624,"column":25,"nodeType":"66","endLine":624,"endColumn":102},{"ruleId":"56","severity":1,"message":"67","line":99,"column":8,"nodeType":"58","endLine":99,"endColumn":10,"suggestions":"68"},{"ruleId":"64","severity":1,"message":"65","line":237,"column":21,"nodeType":"66","endLine":237,"endColumn":98},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'approveRejectAll', 'autoAccept', 'cookies', and 'setCookie'. Either include them or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has a missing dependency: 'menuVisible'. Either include it or remove the dependency array.",["72"],"React Hook useEffect has a missing dependency: 'sortBy'. Either include it or remove the dependency array.",["73"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'queueActiveButtonFeatureEnabled' and 'userId'. Either include them or remove the dependency array.",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [approveRejectAll, autoAccept, cookies, queueActivated, setCookie]",{"range":"83","text":"84"},"Update the dependencies array to be: [currTourStep, menuVisible, tourVisible]",{"range":"85","text":"86"},"Update the dependencies array to be: [sortBy, sortKey]",{"range":"87","text":"88"},"Update the dependencies array to be: [queueActiveButtonFeatureEnabled, userId]",{"range":"89","text":"90"},[4285,4301],"[approveRejectAll, autoAccept, cookies, queueActivated, setCookie]",[4660,4687],"[currTourStep, menuVisible, tourVisible]",[4780,4789],"[sortBy, sortKey]",[3569,3571],"[queueActiveButtonFeatureEnabled, userId]"]